########################
#                      #
#  DAVID ZHANG'S BASH  #
#                      #
########################

#!/bin/bash

###PATHS
export PATH=$HOME/local/bin:$PATH
export PATH="/usr/local/heroku/bin:$PATH"
export PATH="$PATH:$HOME/.rvm/bin" # Add RVM to PATH for scripting
export PATH="/Applications/Postgres.app/Contents/MacOS/bin:$PATH"
export PATH="/usr/local/mysql/bin":$PATH
export DYLD_LIBRARY_PATH="/usr/local/mysql/lib:$DYLD_LIBRARY_PATH"

###PROMPT
# Styles: 00=none 01=bold 04=underscore 05=blink 07=reverse 08=concealed
# Colors: 30=black 31=red 32=green 33=yellow 34=blue 35=magenta 36=cyan 37=white
# Bkgrds: 40=black 41=red 42=green 43=yellow 44=blue 45=magenta 46=cyan 47=white
# \t - Time
# \d - Date
# \u - User
# \h - Host
# \j - Jobs
# \w - Path
# \W - Full path
# \n - New line
RED="\[\e[1;31m\]"
BLUE="\[\e[1;34m\]"
GREEN="\[\e[1;32m\]"
WHITE="\[\e[1;37m\]"
export PS1="$RED[\j] $BLUE[\d \t] $GREEN\u@ \w\n>>>$WHITE "
[[ -s /Users/ezdz/.rvm/scripts/rvm ]] && . /Users/ezdz/.rvm/scripts/rvm

###ALIAS
alias flyers='cd ~/Workspace/flyers'
alias merchants='cd ~/Workspace/merchants'
alias fadmin='cd ~/Workspace/fadmin' 
alias dynamic='cd ~/Workspace/dynamic-content'
alias tools='cd ~/Workspace/Tools'
alias rubytools='cd ~/Workspace/Tools'

set -o vi

function alias_completion {
    local namespace="alias_completion"

    # parse function based completion definitions, where capture group 2 => function and 3 => trigger
    local compl_regex='complete( +[^ ]+)* -F ([^ ]+) ("[^"]+"|[^ ]+)'
    # parse alias definitions, where capture group 1 => trigger, 2 => command, 3 => command arguments
    local alias_regex="alias ([^=]+)='(\"[^\"]+\"|[^ ]+)(( +[^ ]+)*)'"

    # create array of function completion triggers, keeping multi-word triggers together
    eval "local completions=($(complete -p | sed -Ene "/$compl_regex/s//'\3'/p"))"
    (( ${#completions[@]} == 0 )) && return 0

    # create temporary file for wrapper functions and completions
    rm -f "/tmp/${namespace}-*.tmp" # preliminary cleanup
    local tmp_file="$(mktemp "/tmp/${namespace}-${RANDOM}.tmp")" || return 1

    # read in "<alias> '<aliased command>' '<command args>'" lines from defined aliases
    local line; while read line; do
        eval "local alias_tokens=($line)" 2>/dev/null || continue # some alias arg patterns cause an eval parse error 
        local alias_name="${alias_tokens[0]}" alias_cmd="${alias_tokens[1]}" alias_args="${alias_tokens[2]# }"

        # skip aliases to pipes, boolan control structures and other command lists
        # (leveraging that eval errs out if $alias_args contains unquoted shell metacharacters)
        eval "local alias_arg_words=($alias_args)" 2>/dev/null || continue

        # skip alias if there is no completion function triggered by the aliased command
        [[ " ${completions[*]} " =~ " $alias_cmd " ]] || continue
        local new_completion="$(complete -p "$alias_cmd")"

        # create a wrapper inserting the alias arguments if any
        if [[ -n $alias_args ]]; then
            local compl_func="${new_completion/#* -F /}"; compl_func="${compl_func%% *}"
            # avoid recursive call loops by ignoring our own functions
            if [[ "${compl_func#_$namespace::}" == $compl_func ]]; then
                local compl_wrapper="_${namespace}::${alias_name}"
                    echo "function $compl_wrapper {
                        (( COMP_CWORD += ${#alias_arg_words[@]} ))
                        COMP_WORDS=($alias_cmd $alias_args \${COMP_WORDS[@]:1})
                        $compl_func
                    }" >> "$tmp_file"
                    new_completion="${new_completion/ -F $compl_func / -F $compl_wrapper }"
            fi
        fi

        # replace completion trigger by alias
        new_completion="${new_completion% *} $alias_name"
        echo "$new_completion" >> "$tmp_file"
    done < <(alias -p | sed -Ene "s/$alias_regex/\1 '\2' '\3'/p")
    source "$tmp_file" && rm -f "$tmp_file"
}; alias_completion


export AWS_ACCESS_KEY_ID=17ZRYJ3QQHH4B7TAMV82
export AWS_SECRET_ACCESS_KEY=bzHQTsfMW7DUzQK+W8JC/3llarkMQf2ScFDxOw5j

